import React, { Component, PropTypes } from 'react';
import importcss from 'importcss';
import cx from 'classnames';
import _ from 'lodash';

/**
  Какие основные кейсы приходится решать очень часто, хоть и не в каждом проекте:
  Само собой разумеется, что компонент может
    Placeholder. Изображение которое мы показываем в случае если аватарки пользователя нет, изображение не удалось загрузить изза проблем с сервером или изображение в процессе загрузки.
    Бейджи. Придумать механизм передачи для передачи бейджа (елемент который крикрепляется поверх аватарки, обычно с какого-то угла). Частый кейс: пользователей, которые онлайн маркеруют бейджем с зеленой точкой или администраторам/модераторам устанавливают бейдж со звездой.
    Поддержки экранов повышенной плотности пикселей (ретины): <img src="low-res.jpg" srcset="high-res.jpg 2x">
    Включение/выключение накладываемых фильтров на аватар. Очень частый кейс наложение черно-белого css фильтра для пользователей (которые например в оффлайне).
    Включение/выключение тени под аватаркой.
    Включение/выключение рамки и установка ее цвета. Например у текущего пользователя рамка зеленая, а у всех остальных серая.
    Поддержка форм аватарки. Основная форма это квадрат и круг, но в идеале было бы круто разработать механизм для передачи формы гекса с скругленными краями.
    Ну и само собой разуммется, что помимо изображения, в аватарку можно передать alt и title для "странных" браузеров, выключенных картинок и ботов поисковиков.

 */


@importcss(require('./Avatar.css'))
export default class Avatar extends Component {
  static defaultProps = {
    bsStyle: 'primary'
  }
  static propTypes = {
    bsStyle: PropTypes.string
  }
  render() {
    const { bsStyle } = this.props;
    return (
      <div styleName="avatar">

      </div>
    );
  }
}